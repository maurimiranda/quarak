"use strict";angular.module("quarak",["ngCookies","ngResource","ngSanitize","ngRoute"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html"}).when("/projects",{templateUrl:"views/project.html",controller:"ProjectCtrl"}).when("/projects/:projectId/expenses",{templateUrl:"views/expense.html",controller:"ExpenseCtrl"}).otherwise({redirectTo:"/"})}]).config(["$httpProvider",function(a){a.interceptors.push("AuthInterceptor")}]).run(["Session",function(a){a.requestCurrentUser()}]),angular.module("quarak").controller("MainCtrl",["$scope","Session","$window",function(a,b){a.Session=b,a.user={email:"ringo@test.com",password:"Star1234"},a.signIn=function(a){b.login(a.email,a.password)}}]),angular.module("quarak").controller("ExpenseCtrl",["$scope","$routeParams","Expense","Project","Session",function(a,b,c,d,e){a.expenses=null,a.activeExpense=new c({date:new Date,projectId:b.projectId,payer_id:e.currentUser.id}),a.save=function(d){d.member_ids=d.members.map(function(a){return a.id}),delete d.members,_.include(a.expenses,d)?c.update(d):(a.expenses.push(d),d.$save().then(function(){a.expenses=c.query({projectId:b.projectId})})),a.activeExpense=new c({date:new Date,projectId:b.projectId,payer_id:e.currentUser.id})},a.remove=function(b){var c=a.expenses.indexOf(b);a.expenses.splice(c,1),b.$remove()},a.displayMembers=function(a){return a.map(function(a){return a.name}).join(", ")},function(){a.project=d.get({id:b.projectId}),a.expenses=c.query({projectId:b.projectId})}()}]),angular.module("quarak").factory("Expense",["$resource",function a(b){var a=b("/api/projects/:projectId/expenses/:id",{id:"@id",projectId:"@projectId"},{update:{method:"PUT"}});return a}]),angular.module("quarak").directive("qClearOnEsc",function(){return{restrict:"A",require:"ngModel",link:function(a,b,c,d){b.on("keydown",function(b){var c=b.which;a.$apply(function(){27===c&&(d.$setViewValue(""),d.$render())})})}}}),angular.module("quarak").factory("Session",["$q","$http","$window",function(a,b,c){var d={currentUser:null,signedIn:!1,login:function(e,f){var g={email:e,password:f},h=a.defer();return b.post("/api/sign_in",g).success(function(a){c.sessionStorage.token=a.token,d.requestCurrentUser().then(function(){h.resolve(d.currentUser)})}).error(function(){delete c.sessionStorage.token,d.signedIn=!1,d.currentUser=null}),h.promise},requestCurrentUser:function(){var c=a.defer();return d.signedIn?c.resolve(d.currentUser):b.get("/api/profile").success(function(a){d.signedIn=!0,d.currentUser=a,c.resolve(d.currentUser)}),c.promise}};return d}]),angular.module("quarak").factory("AuthInterceptor",["$rootScope","$q","$window",function(a,b,c){return{request:function(a){return a.headers=a.headers||{},c.sessionStorage.token&&(a.headers.Authorization="Token token="+c.sessionStorage.token),a},responseError:function(a){return 401===a.status&&console.log("No autorizado!"),b.reject(a)}}}]),angular.module("quarak").factory("Project",["$resource",function(a){var b=a("/api/projects/:id",{id:"@id"},{update:{method:"PUT"}});return b}]),angular.module("quarak").controller("ProjectCtrl",["$scope","Project",function(a,b){a.projects=b.query(),a.remove=function(b){var c=a.projects.indexOf(b);a.projects.splice(c,1),b.$remove()}}]);